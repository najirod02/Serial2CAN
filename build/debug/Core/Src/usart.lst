ARM GAS  /tmp/ccRciGN2.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"usart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/usart.c"
  20              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  21              		.align	1
  22              		.global	MX_USART2_UART_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	MX_USART2_UART_Init:
  28              	.LFB134:
   1:Core/Src/usart.c **** /* USER CODE BEGIN Header */
   2:Core/Src/usart.c **** /**
   3:Core/Src/usart.c ****   ******************************************************************************
   4:Core/Src/usart.c ****   * @file    usart.c
   5:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/usart.c ****   *          of the USART instances.
   7:Core/Src/usart.c ****   ******************************************************************************
   8:Core/Src/usart.c ****   * @attention
   9:Core/Src/usart.c ****   *
  10:Core/Src/usart.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/usart.c ****   * All rights reserved.
  12:Core/Src/usart.c ****   *
  13:Core/Src/usart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/usart.c ****   * in the root directory of this software component.
  15:Core/Src/usart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** /* USER CODE END Header */
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart2;
  28:Core/Src/usart.c **** 
  29:Core/Src/usart.c **** /* USART2 init function */
  30:Core/Src/usart.c **** 
ARM GAS  /tmp/ccRciGN2.s 			page 2


  31:Core/Src/usart.c **** void MX_USART2_UART_Init(void)
  32:Core/Src/usart.c **** {
  29              		.loc 1 32 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  33:Core/Src/usart.c **** 
  34:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 0 */
  35:Core/Src/usart.c **** 
  36:Core/Src/usart.c ****   /* USER CODE END USART2_Init 0 */
  37:Core/Src/usart.c **** 
  38:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 1 */
  39:Core/Src/usart.c **** 
  40:Core/Src/usart.c ****   /* USER CODE END USART2_Init 1 */
  41:Core/Src/usart.c ****   huart2.Instance = USART2;
  37              		.loc 1 41 3 view .LVU1
  38              		.loc 1 41 19 is_stmt 0 view .LVU2
  39 0002 0A48     		ldr	r0, .L5
  40 0004 0A4B     		ldr	r3, .L5+4
  41 0006 0360     		str	r3, [r0]
  42:Core/Src/usart.c ****   huart2.Init.BaudRate = 115200;
  42              		.loc 1 42 3 is_stmt 1 view .LVU3
  43              		.loc 1 42 24 is_stmt 0 view .LVU4
  44 0008 4FF4E133 		mov	r3, #115200
  45 000c 4360     		str	r3, [r0, #4]
  43:Core/Src/usart.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
  46              		.loc 1 43 3 is_stmt 1 view .LVU5
  47              		.loc 1 43 26 is_stmt 0 view .LVU6
  48 000e 0023     		movs	r3, #0
  49 0010 8360     		str	r3, [r0, #8]
  44:Core/Src/usart.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
  50              		.loc 1 44 3 is_stmt 1 view .LVU7
  51              		.loc 1 44 24 is_stmt 0 view .LVU8
  52 0012 C360     		str	r3, [r0, #12]
  45:Core/Src/usart.c ****   huart2.Init.Parity = UART_PARITY_NONE;
  53              		.loc 1 45 3 is_stmt 1 view .LVU9
  54              		.loc 1 45 22 is_stmt 0 view .LVU10
  55 0014 0361     		str	r3, [r0, #16]
  46:Core/Src/usart.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
  56              		.loc 1 46 3 is_stmt 1 view .LVU11
  57              		.loc 1 46 20 is_stmt 0 view .LVU12
  58 0016 0C22     		movs	r2, #12
  59 0018 4261     		str	r2, [r0, #20]
  47:Core/Src/usart.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  60              		.loc 1 47 3 is_stmt 1 view .LVU13
  61              		.loc 1 47 25 is_stmt 0 view .LVU14
  62 001a 8361     		str	r3, [r0, #24]
  48:Core/Src/usart.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  63              		.loc 1 48 3 is_stmt 1 view .LVU15
  64              		.loc 1 48 28 is_stmt 0 view .LVU16
  65 001c C361     		str	r3, [r0, #28]
  49:Core/Src/usart.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
  66              		.loc 1 49 3 is_stmt 1 view .LVU17
ARM GAS  /tmp/ccRciGN2.s 			page 3


  67              		.loc 1 49 7 is_stmt 0 view .LVU18
  68 001e FFF7FEFF 		bl	HAL_UART_Init
  69              	.LVL0:
  70              		.loc 1 49 6 discriminator 1 view .LVU19
  71 0022 00B9     		cbnz	r0, .L4
  72              	.L1:
  50:Core/Src/usart.c ****   {
  51:Core/Src/usart.c ****     Error_Handler();
  52:Core/Src/usart.c ****   }
  53:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_Init 2 */
  54:Core/Src/usart.c **** 
  55:Core/Src/usart.c ****   /* USER CODE END USART2_Init 2 */
  56:Core/Src/usart.c **** 
  57:Core/Src/usart.c **** }
  73              		.loc 1 57 1 view .LVU20
  74 0024 08BD     		pop	{r3, pc}
  75              	.L4:
  51:Core/Src/usart.c ****   }
  76              		.loc 1 51 5 is_stmt 1 view .LVU21
  77 0026 FFF7FEFF 		bl	Error_Handler
  78              	.LVL1:
  79              		.loc 1 57 1 is_stmt 0 view .LVU22
  80 002a FBE7     		b	.L1
  81              	.L6:
  82              		.align	2
  83              	.L5:
  84 002c 00000000 		.word	huart2
  85 0030 00440040 		.word	1073759232
  86              		.cfi_endproc
  87              	.LFE134:
  89              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  90              		.align	1
  91              		.global	HAL_UART_MspInit
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	HAL_UART_MspInit:
  97              	.LVL2:
  98              	.LFB135:
  58:Core/Src/usart.c **** 
  59:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  60:Core/Src/usart.c **** {
  99              		.loc 1 60 1 is_stmt 1 view -0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 32
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		.loc 1 60 1 is_stmt 0 view .LVU24
 104 0000 10B5     		push	{r4, lr}
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 4, -8
 107              		.cfi_offset 14, -4
 108 0002 88B0     		sub	sp, sp, #32
 109              		.cfi_def_cfa_offset 40
  61:Core/Src/usart.c **** 
  62:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 110              		.loc 1 62 3 is_stmt 1 view .LVU25
 111              		.loc 1 62 20 is_stmt 0 view .LVU26
ARM GAS  /tmp/ccRciGN2.s 			page 4


 112 0004 0023     		movs	r3, #0
 113 0006 0393     		str	r3, [sp, #12]
 114 0008 0493     		str	r3, [sp, #16]
 115 000a 0593     		str	r3, [sp, #20]
 116 000c 0693     		str	r3, [sp, #24]
 117 000e 0793     		str	r3, [sp, #28]
  63:Core/Src/usart.c ****   if(uartHandle->Instance==USART2)
 118              		.loc 1 63 3 is_stmt 1 view .LVU27
 119              		.loc 1 63 16 is_stmt 0 view .LVU28
 120 0010 0268     		ldr	r2, [r0]
 121              		.loc 1 63 5 view .LVU29
 122 0012 184B     		ldr	r3, .L11
 123 0014 9A42     		cmp	r2, r3
 124 0016 01D0     		beq	.L10
 125              	.LVL3:
 126              	.L7:
  64:Core/Src/usart.c ****   {
  65:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 0 */
  66:Core/Src/usart.c **** 
  67:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 0 */
  68:Core/Src/usart.c ****     /* USART2 clock enable */
  69:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_ENABLE();
  70:Core/Src/usart.c **** 
  71:Core/Src/usart.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  72:Core/Src/usart.c ****     /**USART2 GPIO Configuration
  73:Core/Src/usart.c ****     PA2     ------> USART2_TX
  74:Core/Src/usart.c ****     PA3     ------> USART2_RX
  75:Core/Src/usart.c ****     */
  76:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
  77:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  78:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  79:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  80:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
  81:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  82:Core/Src/usart.c **** 
  83:Core/Src/usart.c ****     /* USART2 interrupt Init */
  84:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
  85:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
  86:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
  87:Core/Src/usart.c **** 
  88:Core/Src/usart.c ****   /* USER CODE END USART2_MspInit 1 */
  89:Core/Src/usart.c ****   }
  90:Core/Src/usart.c **** }
 127              		.loc 1 90 1 view .LVU30
 128 0018 08B0     		add	sp, sp, #32
 129              		.cfi_remember_state
 130              		.cfi_def_cfa_offset 8
 131              		@ sp needed
 132 001a 10BD     		pop	{r4, pc}
 133              	.LVL4:
 134              	.L10:
 135              		.cfi_restore_state
  69:Core/Src/usart.c **** 
 136              		.loc 1 69 5 is_stmt 1 view .LVU31
 137              	.LBB2:
  69:Core/Src/usart.c **** 
 138              		.loc 1 69 5 view .LVU32
ARM GAS  /tmp/ccRciGN2.s 			page 5


 139 001c 0024     		movs	r4, #0
 140 001e 0194     		str	r4, [sp, #4]
  69:Core/Src/usart.c **** 
 141              		.loc 1 69 5 view .LVU33
 142 0020 03F5FA33 		add	r3, r3, #128000
 143 0024 1A6C     		ldr	r2, [r3, #64]
 144 0026 42F40032 		orr	r2, r2, #131072
 145 002a 1A64     		str	r2, [r3, #64]
  69:Core/Src/usart.c **** 
 146              		.loc 1 69 5 view .LVU34
 147 002c 1A6C     		ldr	r2, [r3, #64]
 148 002e 02F40032 		and	r2, r2, #131072
 149 0032 0192     		str	r2, [sp, #4]
  69:Core/Src/usart.c **** 
 150              		.loc 1 69 5 view .LVU35
 151 0034 019A     		ldr	r2, [sp, #4]
 152              	.LBE2:
  69:Core/Src/usart.c **** 
 153              		.loc 1 69 5 view .LVU36
  71:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 154              		.loc 1 71 5 view .LVU37
 155              	.LBB3:
  71:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 156              		.loc 1 71 5 view .LVU38
 157 0036 0294     		str	r4, [sp, #8]
  71:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 158              		.loc 1 71 5 view .LVU39
 159 0038 1A6B     		ldr	r2, [r3, #48]
 160 003a 42F00102 		orr	r2, r2, #1
 161 003e 1A63     		str	r2, [r3, #48]
  71:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 162              		.loc 1 71 5 view .LVU40
 163 0040 1B6B     		ldr	r3, [r3, #48]
 164 0042 03F00103 		and	r3, r3, #1
 165 0046 0293     		str	r3, [sp, #8]
  71:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 166              		.loc 1 71 5 view .LVU41
 167 0048 029B     		ldr	r3, [sp, #8]
 168              	.LBE3:
  71:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 169              		.loc 1 71 5 view .LVU42
  76:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 170              		.loc 1 76 5 view .LVU43
  76:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 171              		.loc 1 76 25 is_stmt 0 view .LVU44
 172 004a 0C23     		movs	r3, #12
 173 004c 0393     		str	r3, [sp, #12]
  77:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 174              		.loc 1 77 5 is_stmt 1 view .LVU45
  77:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 175              		.loc 1 77 26 is_stmt 0 view .LVU46
 176 004e 0223     		movs	r3, #2
 177 0050 0493     		str	r3, [sp, #16]
  78:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 178              		.loc 1 78 5 is_stmt 1 view .LVU47
  79:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 179              		.loc 1 79 5 view .LVU48
ARM GAS  /tmp/ccRciGN2.s 			page 6


  79:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 180              		.loc 1 79 27 is_stmt 0 view .LVU49
 181 0052 0323     		movs	r3, #3
 182 0054 0693     		str	r3, [sp, #24]
  80:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 183              		.loc 1 80 5 is_stmt 1 view .LVU50
  80:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 184              		.loc 1 80 31 is_stmt 0 view .LVU51
 185 0056 0723     		movs	r3, #7
 186 0058 0793     		str	r3, [sp, #28]
  81:Core/Src/usart.c **** 
 187              		.loc 1 81 5 is_stmt 1 view .LVU52
 188 005a 03A9     		add	r1, sp, #12
 189 005c 0648     		ldr	r0, .L11+4
 190              	.LVL5:
  81:Core/Src/usart.c **** 
 191              		.loc 1 81 5 is_stmt 0 view .LVU53
 192 005e FFF7FEFF 		bl	HAL_GPIO_Init
 193              	.LVL6:
  84:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
 194              		.loc 1 84 5 is_stmt 1 view .LVU54
 195 0062 2246     		mov	r2, r4
 196 0064 2146     		mov	r1, r4
 197 0066 2620     		movs	r0, #38
 198 0068 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 199              	.LVL7:
  85:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
 200              		.loc 1 85 5 view .LVU55
 201 006c 2620     		movs	r0, #38
 202 006e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 203              	.LVL8:
 204              		.loc 1 90 1 is_stmt 0 view .LVU56
 205 0072 D1E7     		b	.L7
 206              	.L12:
 207              		.align	2
 208              	.L11:
 209 0074 00440040 		.word	1073759232
 210 0078 00000240 		.word	1073872896
 211              		.cfi_endproc
 212              	.LFE135:
 214              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 215              		.align	1
 216              		.global	HAL_UART_MspDeInit
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 221              	HAL_UART_MspDeInit:
 222              	.LVL9:
 223              	.LFB136:
  91:Core/Src/usart.c **** 
  92:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
  93:Core/Src/usart.c **** {
 224              		.loc 1 93 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		.loc 1 93 1 is_stmt 0 view .LVU58
ARM GAS  /tmp/ccRciGN2.s 			page 7


 229 0000 08B5     		push	{r3, lr}
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 3, -8
 232              		.cfi_offset 14, -4
  94:Core/Src/usart.c **** 
  95:Core/Src/usart.c ****   if(uartHandle->Instance==USART2)
 233              		.loc 1 95 3 is_stmt 1 view .LVU59
 234              		.loc 1 95 16 is_stmt 0 view .LVU60
 235 0002 0268     		ldr	r2, [r0]
 236              		.loc 1 95 5 view .LVU61
 237 0004 084B     		ldr	r3, .L17
 238 0006 9A42     		cmp	r2, r3
 239 0008 00D0     		beq	.L16
 240              	.LVL10:
 241              	.L13:
  96:Core/Src/usart.c ****   {
  97:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
  98:Core/Src/usart.c **** 
  99:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 0 */
 100:Core/Src/usart.c ****     /* Peripheral clock disable */
 101:Core/Src/usart.c ****     __HAL_RCC_USART2_CLK_DISABLE();
 102:Core/Src/usart.c **** 
 103:Core/Src/usart.c ****     /**USART2 GPIO Configuration
 104:Core/Src/usart.c ****     PA2     ------> USART2_TX
 105:Core/Src/usart.c ****     PA3     ------> USART2_RX
 106:Core/Src/usart.c ****     */
 107:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_3);
 108:Core/Src/usart.c **** 
 109:Core/Src/usart.c ****     /* USART2 interrupt Deinit */
 110:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART2_IRQn);
 111:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 112:Core/Src/usart.c **** 
 113:Core/Src/usart.c ****   /* USER CODE END USART2_MspDeInit 1 */
 114:Core/Src/usart.c ****   }
 115:Core/Src/usart.c **** }
 242              		.loc 1 115 1 view .LVU62
 243 000a 08BD     		pop	{r3, pc}
 244              	.LVL11:
 245              	.L16:
 101:Core/Src/usart.c **** 
 246              		.loc 1 101 5 is_stmt 1 view .LVU63
 247 000c 074A     		ldr	r2, .L17+4
 248 000e 136C     		ldr	r3, [r2, #64]
 249 0010 23F40033 		bic	r3, r3, #131072
 250 0014 1364     		str	r3, [r2, #64]
 107:Core/Src/usart.c **** 
 251              		.loc 1 107 5 view .LVU64
 252 0016 0C21     		movs	r1, #12
 253 0018 0548     		ldr	r0, .L17+8
 254              	.LVL12:
 107:Core/Src/usart.c **** 
 255              		.loc 1 107 5 is_stmt 0 view .LVU65
 256 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 257              	.LVL13:
 110:Core/Src/usart.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 258              		.loc 1 110 5 is_stmt 1 view .LVU66
 259 001e 2620     		movs	r0, #38
ARM GAS  /tmp/ccRciGN2.s 			page 8


 260 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 261              	.LVL14:
 262              		.loc 1 115 1 is_stmt 0 view .LVU67
 263 0024 F1E7     		b	.L13
 264              	.L18:
 265 0026 00BF     		.align	2
 266              	.L17:
 267 0028 00440040 		.word	1073759232
 268 002c 00380240 		.word	1073887232
 269 0030 00000240 		.word	1073872896
 270              		.cfi_endproc
 271              	.LFE136:
 273              		.global	huart2
 274              		.section	.bss.huart2,"aw",%nobits
 275              		.align	2
 278              	huart2:
 279 0000 00000000 		.space	72
 279      00000000 
 279      00000000 
 279      00000000 
 279      00000000 
 280              		.text
 281              	.Letext0:
 282              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 283              		.file 3 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 284              		.file 4 "/home/dorijan/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-n
 285              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 286              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 287              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 288              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 289              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 290              		.file 10 "Core/Inc/usart.h"
 291              		.file 11 "Core/Inc/main.h"
ARM GAS  /tmp/ccRciGN2.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
     /tmp/ccRciGN2.s:21     .text.MX_USART2_UART_Init:00000000 $t
     /tmp/ccRciGN2.s:27     .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
     /tmp/ccRciGN2.s:84     .text.MX_USART2_UART_Init:0000002c $d
     /tmp/ccRciGN2.s:278    .bss.huart2:00000000 huart2
     /tmp/ccRciGN2.s:90     .text.HAL_UART_MspInit:00000000 $t
     /tmp/ccRciGN2.s:96     .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/ccRciGN2.s:209    .text.HAL_UART_MspInit:00000074 $d
     /tmp/ccRciGN2.s:215    .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/ccRciGN2.s:221    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/ccRciGN2.s:267    .text.HAL_UART_MspDeInit:00000028 $d
     /tmp/ccRciGN2.s:275    .bss.huart2:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
